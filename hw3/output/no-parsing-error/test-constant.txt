[  Shift  ] | PROGRAM
[  Shift  ] | IDENTIFIER
[  Shift  ] | LPAREN
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: id
[  Shift  ] | COMMA
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: identifier_list , id
[  Shift  ] | COMMA
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: identifier_list , id
[  Shift  ] | RPAREN
[  Shift  ] | SEMICOLON
[Reduction] | lambda:
[Reduction] | declarations: lambda
[  Shift  ] | VAR
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: id
[  Shift  ] | COMMA
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: identifier_list , id
[  Shift  ] | COMMA
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: identifier_list , id
[  Shift  ] | COLON
[  Shift  ] | INTEGER
[Reduction] | standard_type: INTEGER
[Reduction] | type: standard_type
[  Shift  ] | SEMICOLON
[Reduction] | declarations: declarations VAR identifier_list : type ;
[  Shift  ] | VAR
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: id
[  Shift  ] | COMMA
[  Shift  ] | IDENTIFIER
[Reduction] | identifier_list: identifier_list , id
[  Shift  ] | COLON
[  Shift  ] | ARRAY
[  Shift  ] | LBRAC
[  Shift  ] | NUM
[  Shift  ] | DOTDOT
[  Shift  ] | NUM
[  Shift  ] | RBRAC
[  Shift  ] | OF
[  Shift  ] | INTEGER
[Reduction] | standard_type: INTEGER
[Reduction] | type: standard_type
[Reduction] | type: ARRAY [ num .. num ] OF type
[  Shift  ] | SEMICOLON
[Reduction] | declarations: declarations VAR identifier_list : type ;
[  Shift  ] | PBEGIN
[Reduction] | lambda:
[Reduction] | subprogram_declarations: lambda
[  Shift  ] | IDENTIFIER
[  Shift  ] | ASSIGNMENT
[Reduction] | lambda:
[Reduction] | tail: lambda
[Reduction] | variable: id tail
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | SEMICOLON
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | statement: variable := expression
[Reduction] | statement_list: statement
[  Shift  ] | IDENTIFIER
[  Shift  ] | ASSIGNMENT
[Reduction] | lambda:
[Reduction] | tail: lambda
[Reduction] | variable: id tail
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | LPAREN
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | RPAREN
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | factor: ( expression )
[Reduction] | term: term mulop factor
[  Shift  ] | SEMICOLON
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | statement: variable := expression
[Reduction] | statement_list: statement_list ; statement
[  Shift  ] | IDENTIFIER
[  Shift  ] | LBRAC
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | RBRAC
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[  Shift  ] | ASSIGNMENT
[Reduction] | lambda:
[Reduction] | tail: lambda
[Reduction] | tail: [ expression ] tail
[Reduction] | variable: id tail
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | LPAREN
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | RPAREN
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | factor: ( expression )
[Reduction] | term: term mulop factor
[  Shift  ] | SEMICOLON
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | statement: variable := expression
[Reduction] | statement_list: statement_list ; statement
[  Shift  ] | IDENTIFIER
[  Shift  ] | LBRAC
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | LPAREN
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | RPAREN
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | factor: ( expression )
[Reduction] | term: term mulop factor
[  Shift  ] | RBRAC
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[  Shift  ] | ASSIGNMENT
[Reduction] | lambda:
[Reduction] | tail: lambda
[Reduction] | tail: [ expression ] tail
[Reduction] | variable: id tail
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | LPAREN
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | PLUS
[Reduction] | simple_expression: term
[Reduction] | addop: +
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: factor
[  Shift  ] | STAR
[Reduction] | mulop: *
[  Shift  ] | NUM
[Reduction] | factor: num
[Reduction] | term: term mulop factor
[  Shift  ] | RPAREN
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | factor: ( expression )
[Reduction] | term: term mulop factor
[  Shift  ] | END
[Reduction] | simple_expression: simple_expression addop term
[Reduction] | boolexpression: simple_expression
[Reduction] | expression: boolexpression
[Reduction] | statement: variable := expression
[Reduction] | statement_list: statement_list ; statement
[Reduction] | optional_statements: statement_list
[Reduction] | compound_statement: begin optional_statements end
[  Shift  ] | DOT
[Reduction] | prog: PROGRAM id ( identifier_list ) ; declarations subprogram_declarations compound_statement .
OK
------------------------- AST -------------------------
prog
  PROGRAM
  IDENTIFIER
  LPAREN
  identifier_list
    identifier_list
      identifier_list
        IDENTIFIER
      COMMA
      IDENTIFIER
    COMMA
    IDENTIFIER
  RPAREN
  SEMICOLON
  declarations
    declarations
      declarations
        lambda
      VAR
      identifier_list
        identifier_list
          identifier_list
            IDENTIFIER
          COMMA
          IDENTIFIER
        COMMA
        IDENTIFIER
      COLON
      type
        standard_type
          INTEGER
      SEMICOLON
    VAR
    identifier_list
      identifier_list
        IDENTIFIER
      COMMA
      IDENTIFIER
    COLON
    type
      ARRAY
      LBRAC
      NUM
      DOTDOT
      NUM
      RBRAC
      OF
      type
        standard_type
          INTEGER
    SEMICOLON
  subprogram_declarations
    lambda
  compound_statement
    PBEGIN
    optional_statements
      statement_list
        statement_list
          statement_list
            statement_list
              statement
                variable
                  IDENTIFIER
                  tail
                    lambda
                ASSIGNMENT
                expression
                  boolexpression
                    simple_expression
                      simple_expression
                        term
                          factor
                            NUM
                      addop
                        PLUS
                      term
                        factor
                          NUM
            SEMICOLON
            statement
              variable
                IDENTIFIER
                tail
                  lambda
              ASSIGNMENT
              expression
                boolexpression
                  simple_expression
                    simple_expression
                      simple_expression
                        term
                          factor
                            NUM
                      addop
                        PLUS
                      term
                        term
                          factor
                            NUM
                        mulop
                          STAR
                        factor
                          NUM
                    addop
                      PLUS
                    term
                      term
                        factor
                          NUM
                      mulop
                        STAR
                      factor
                        LPAREN
                        expression
                          boolexpression
                            simple_expression
                              simple_expression
                                term
                                  factor
                                    NUM
                              addop
                                PLUS
                              term
                                term
                                  factor
                                    NUM
                                mulop
                                  STAR
                                factor
                                  NUM
                        RPAREN
          SEMICOLON
          statement
            variable
              IDENTIFIER
              tail
                LBRAC
                expression
                  boolexpression
                    simple_expression
                      simple_expression
                        term
                          factor
                            NUM
                      addop
                        PLUS
                      term
                        factor
                          NUM
                RBRAC
                tail
                  lambda
            ASSIGNMENT
            expression
              boolexpression
                simple_expression
                  simple_expression
                    simple_expression
                      term
                        factor
                          NUM
                    addop
                      PLUS
                    term
                      term
                        factor
                          NUM
                      mulop
                        STAR
                      factor
                        NUM
                  addop
                    PLUS
                  term
                    term
                      factor
                        NUM
                    mulop
                      STAR
                    factor
                      LPAREN
                      expression
                        boolexpression
                          simple_expression
                            simple_expression
                              term
                                factor
                                  NUM
                            addop
                              PLUS
                            term
                              term
                                factor
                                  NUM
                              mulop
                                STAR
                              factor
                                NUM
                      RPAREN
        SEMICOLON
        statement
          variable
            IDENTIFIER
            tail
              LBRAC
              expression
                boolexpression
                  simple_expression
                    simple_expression
                      simple_expression
                        term
                          factor
                            NUM
                      addop
                        PLUS
                      term
                        term
                          factor
                            NUM
                        mulop
                          STAR
                        factor
                          NUM
                    addop
                      PLUS
                    term
                      term
                        factor
                          NUM
                      mulop
                        STAR
                      factor
                        LPAREN
                        expression
                          boolexpression
                            simple_expression
                              simple_expression
                                term
                                  factor
                                    NUM
                              addop
                                PLUS
                              term
                                term
                                  factor
                                    NUM
                                mulop
                                  STAR
                                factor
                                  NUM
                        RPAREN
              RBRAC
              tail
                lambda
          ASSIGNMENT
          expression
            boolexpression
              simple_expression
                simple_expression
                  simple_expression
                    term
                      factor
                        NUM
                  addop
                    PLUS
                  term
                    term
                      factor
                        NUM
                    mulop
                      STAR
                    factor
                      NUM
                addop
                  PLUS
                term
                  term
                    factor
                      NUM
                  mulop
                    STAR
                  factor
                    LPAREN
                    expression
                      boolexpression
                        simple_expression
                          simple_expression
                            term
                              factor
                                NUM
                          addop
                            PLUS
                          term
                            term
                              factor
                                NUM
                            mulop
                              STAR
                            factor
                              NUM
                    RPAREN
    END
  DOT
------------------------- END -------------------------
